swagger: '2.0'
info:
  title: Corvallis Parks API
  description: an api for the parks of Corvallis, OR
  version: v1
  license:
    name: GNU Affero General Public License Version 3
    url: http://www.gnu.org/licenses/agpl-3.0.en.html
  contact:
    name: David Kalcic
    email: kalcicd@oregonstate.edu
schemes:
  - https
host: api.oregonstate.edu
basePath: /v1
externalDocs:
  description: GitHub Repository
  url: https://github.com/osu-mist/parks-api
produces:
  - application/json
paths:
  /parks:
    get:
      summary: List all parks
      tags:
      - parks
      description: Get all parks
      operationId: getParks
      parameters:
        - $ref: '#/parameters/authorization'
        - in: query
          name: Amenities
          description: Filter by park amenities ("play area", "hiking trails", etc.)
          required: false
          type: array
          items:
            type: string
            enum:
              - "ballfield"
              - "barbeque grills"
              - "basketball courts"
              - "bike paths"
              - "boat ramps"
              - "dogs allowed"
              - "drinking water"
              - "fishing"
              - "hiking trails"
              - "horseshoes"
              - "natural area"
              - "offleash dog park"
              - "open fields"
              - "picnic shelters"
              - "picnic tables"
              - "play area"
              - "restrooms"
              - "scenic view point"
              - "soccer fields"
              - "tennis courts"
              - "volleyball"
        - in: query
          name: Park Name
          description: Filter parks by name
          required: false
          type: string
        - in: query
          name: Owner ID
          description: Filter parks by owner ID
          required: false
          type: string
        - in: query
          name: City
          description: Filter parks by city
          required: false
          type: string
        - in: query
          name: State
          description: Filter parks by state
          required: false
          type: string
        - in: query
          name: Zip Code
          description: Filter parks by zip code
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ParksResult'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResult'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResult'
    post:
      summary: Creates a new park
      tags:
        - parks
      operationId: createPark
      parameters:
      - $ref: '#/parameters/authorization'
      - in: body
        name: body
        description: Park object to be added
        required: true
        schema:
          $ref: '#/definitions/PostParkModel'
      responses:
        '201':
          description: Successfully created new park
          schema:
            $ref: '#/definitions/ParkResult'
        '400':
          description: Invalid park object
          schema:
            $ref: '#/definitions/ErrorResult'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResult'
  /parks/{parkId}:
    get:
      summary: Lists info for a specific park
      tags:
        - parks
      description: Get park by unique ID
      operationId: getParkById
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/parkIdPath'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ParkResult'
        '404':
          description: Park resource not found
          schema:
            $ref: '#/definitions/ErrorResult'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResult'
    patch:
      summary: Update information of a specific park
      tags: 
        - parks
      description: Update park by unique ID
      operationId: updateParkById
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/ownerId'
        - $ref: '#/parameters/ownerPassword'
        - $ref: '#/parameters/parkIdPath'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ParkResult'
        '404':
          description: Park resource not found
          schema:
            $ref: '#/definitions/ErrorResult'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResult'
    delete:
      summary: Delete a specific park
      tags: 
        - parks
      description: Delete park by unique ID
      operationId: deleteParkById
      parameters:
        - $ref: '#/parameters/authorization'
        - $ref: '#/parameters/ownerId'
        - $ref: '#/parameters/ownerPassword'
        - $ref: '#/parameters/parkIdPath'
      responses:
        '204':
          description: Park successfully deleted
        '400':
          description: Incorrect syntax in request, or required fields missing
          schema:
            $ref: '#/definitions/ErrorResult'
        '404':
          description: Park resource not found
          schema:
            $ref: '#/definitions/ErrorResult'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResult'
  /owners:
    get:
      summary: Lists all park owners
      tags:
        - owners
      description: Get all park owners
      operationId: getOwner
      parameters:
      - $ref: '#/parameters/authorization'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OwnersResult'
        '400':
          description: Incorrect syntax in request, or required fields missing
          schema:
            $ref: '#/definitions/ErrorResult'
        '404':
          description: Park resource not found
          schema:
            $ref: '#/definitions/ErrorResult'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResult'
    post:
      summary: Creates a new park owner account
      tags:
        - owners
      description: Post a new park owner
      operationId: postOwner
      parameters:
      - $ref: '#/parameters/authorization'
      - in: query
        name: Name / Organization
        description: Your name or organization name
        type: string
        required: true
      - in: query
        name: Password
        description: Enter a password to access your parks with
        type: string
        required: true
      responses:
        '201':
          description: Owner account successfully created
          schema:
            $ref: '#/definitions/OwnerResultPrivate'
        '400':
          description: Incorrect syntax in request, or required fields missing
          schema:
            $ref: '#/definitions/ErrorResult'
        '409':
          description: Owner account already exists
          schema:
            $ref: '#/definitions/ErrorResult'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResult'
  /owners/{ownerId}:
    get:
      summary: gets the account of a park owner by ID
      tags:
        - owners
      description: gets park owner by ID
      operationId: getOwnerById
      parameters:
      - $ref: '#/parameters/ownerIdPath'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/ownerId'
      - in: header
        name: Password
        description: Password associated with the owner ID
        type: string
        required: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/OwnerResultPublic'
        '400':
          description: Incorrect syntax in request, or required fields missing
          schema:
            $ref: '#/definitions/ErrorResult'
        '404':
          description: Owner resource not found
          schema:
            $ref: '#/definitions/ErrorResult'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResult'
    patch:
      summary: Updates the account of a park owner by ID
      tags:
        - owners
      description: patch park owner by ID
      operationId: updateOwnerById
      parameters:
      - $ref: '#/parameters/ownerIdPath'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/ownerId'
      - in: header
        name: Password
        description: Password associated with the owner ID
        type: string
        required: true
      - in: query
        name: New Name / Organization
        description: Your new name / organization
        type: string
        required: false
      - in: query
        name: New Password
        description: Your new password
        type: string
        required: false
      responses:
        '200':
          description: Owner successfully updated
          schema:
            $ref: '#/definitions/OwnerResultPrivate'
        '400':
          description: Incorrect syntax in request, or required fields missing
          schema:
            $ref: '#/definitions/ErrorResult'
        '404':
          description: Owner resource not found
          schema:
            $ref: '#/definitions/ErrorResult'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResult'
    delete:
      summary: Delete a park owner account by ID
      tags:
        - owners
      description: Delete owner by ID
      operationId: deleteOwnerById
      parameters:
      - $ref: '#/parameters/ownerIdPath'
      - $ref: '#/parameters/authorization'
      - $ref: '#/parameters/ownerId'
      - in: header
        name: Password
        description: Password associated with the owner ID
        type: string
        required: true
      responses:
        '204':
          description: Park successfully deleted
        '400':
          description: Incorrect syntax in request, or required fields missing
          schema:
            $ref: '#/definitions/ErrorResult'
        '404':
          description: Owner resource not found
          schema:
            $ref: '#/definitions/ErrorResult'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResult'

parameters:
  authorization:
    name: Authorization
    in: header
    type: string
    required: true
    description: '"Bearer [token]" where [token] is your OAuth2 access token'
  ownerId:
    name: ownerId
    in: header
    description: ID of park owner
    required: true
    type: string
  ownerIdPath:
    in: path
    name: ownerId
    description: ID of owner
    type: string
    required: true
  ownerPassword:
    name: ownerPassword
    in: header
    description: password for park owner
    required: true
    type: string
  parkIdPath:
    name: parkId
    in: path
    description: Unique Park ID
    required: true
    type: string
  

definitions:
  SelfLink:
    properties:
      self:
        type: string
        example: request_url_here
        format: url
        description: Self-link of current resource
  OwnerResultPrivate:
    properties:
      links:
        $ref: '#/definitions/SelfLink'
      data:
        $ref: '#/definitions/OwnerResourcePrivate'
  OwnerResultPublic:
    properties:
      links:
        $ref: '#/definitions/SelfLink'
      data:
        $ref: '#/definitions/OwnerResourcePublic'
  OwnersResult:
    properties:
      links:
        $ref: '#/definitions/SelfLink'
      data:
        type: array
        items:
          $ref: '#/definitions/OwnerResourcePublic'
  OwnerResourcePublic:
    properties:
      id:
        type: string
        example: 0001
        description: A unique ID of a park owner
      attributes:
        properties:
          ownerName:
            type: string
            description: Name of park owner / organization
            example: City of Corvallis
  OwnerResourcePrivate:
    properties:
      id:
        type: string
        example: 0001
        description: A unique ID of a park owner
      attributes:
        properties:
          ownerName:
            type: string
            description: Name of park owner / organization
            example: City of Corvallis
          ownerPassword:
            type: string
            description: Password
            example: password1234
  ParkResource:
    properties:
      id:
        type: string
        example: 0001
        description: A unique ID of park
      attributes:
        properties:
          name:
            type: string
            description: Name of Park
            example: Avery Park
          owner:
            type: object
            properties:
              ownerName:
                type: string
                example: City of Corvallis
              ownerId:
                type: string
                example: 1111
          location:
            type: object
            properties:
              streetAddress:
                type: string
                description: Park address
                example: 1200 SW Avery Park Dr.
              city:
                type: string
                description: city where the park is located
                example: Corvallis
              state:
                type: string
                description: Abbreviation of state where park is located
                example: OR
              zip:
                type: string
                description: Zip code where park is located
                example: 97333
              latitude:
                type: string
                description: latitude of park
                example: 44.552283
              longitude:
                type: string
                description: longitude of park
                example: -123.269906
          amenities:
            type: array
            items:
              type: string
            example: ['play area', 'bike paths']
            description: list of amenities at park
  PostParkModel:
    properties:
      attributes:
        properties:
          name:
            type: string
            description: Name of Park
            example: Avery Park
          owner:
            type: object
            properties:
              ownerName:
                type: string
                example: City of Corvallis
              ownerId:
                type: string
                example: 1111
          location:
            type: object
            properties:
              streetAddress:
                type: string
                description: Park address
                example: 1200 SW Avery Park Dr.
              city:
                type: string
                description: city where the park is located
                example: Corvallis
              state:
                type: string
                description: Abbreviation of state where park is located
                example: OR
              zip:
                type: string
                description: Zip code where park is located
                example: 97333
              latitude:
                type: string
                description: latitude of park
                example: 44.552283
              longitude:
                type: string
                description: longitude of park
                example: -123.269906
          amenities:
            type: array
            items:
              type: string
            example: ['play area', 'bike paths']
            description: list of amenities at park
  ParkResult:
    properties:
      links:
        $ref: '#/definitions/SelfLink'
      data:
        $ref: '#/definitions/ParkResource'
  ParksResult:
    properties:
      links:
        allOf:
          - $ref: '#/definitions/SelfLink'
      data:
        type: array
        items:
          $ref: '#/definitions/ParkResource'
  ErrorObject:
    properties:
      status:
        type: string
        description: HTTP status code
        example: 'error_code'
      title:
        type: string
        description: A short, user readable summary of the error
        example: Not Found
      code:
        type: string
        description: An application-specific error code
        example: 'error_code'
      detail:
        type: string
        description: A long description of the error that may contain instance-specific details
      links:
        properties:
          about:
            type: string
            format: url
            description: A link to further information about the error
            example: https://developer.oregonstate.edu/documentation/error-reference#1234
  ErrorResult:
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/ErrorObject'
